/*
üß™ Ejercicio: Validaci√≥n b√°sica de correo electr√≥nico

Crea una funci√≥n llamada esEmailValido que reciba una cadena de texto
y devuelva true si cumple con la estructura b√°sica de un correo electr√≥nico:

1. Contiene exactamente una arroba '@'.
2. Hay al menos un car√°cter antes de la arroba.
3. Despu√©s de la arroba, existe al menos un punto '.'.
4. El punto debe estar ubicado despu√©s de la arroba.
5. No debe contener espacios.

Ejemplos v√°lidos:
- "usuario@correo.com"      ‚úÖ
- "admin@mail.es"           ‚úÖ

Ejemplos no v√°lidos:
- "usuario@@correo.com"     ‚ùå
- "usuario@.com"            ‚ùå
- "usuariocorreo.com"       ‚ùå
- "@dominio.com"            ‚ùå
- "correo @mail.com"        ‚ùå
*/


#include <iostream>
#include <sstream>
using namespace std;

bool esEmailValido(string correo) {
    // 1. Contar la cantidad de arrobas
    int arrobas = 0;
    for (char c : correo) {
        if (c == '@') arrobas++;
    }
    if (arrobas != 1) return false;

    // 2. Verificar que no empieza con '@'
    if (correo[0] == '@') return false;

    // 3. Buscar posici√≥n de la arroba
    int posArroba = correo.find('@');

    // 4. Verificar que hay un punto despu√©s de la arroba
    int posPunto = correo.find('.', posArroba);
    if (posPunto == string::npos) return false;

    // 5. Verificar que no haya espacios
    for (char c : correo) {
        if (isspace(c)) return false;
    }

    return true;
}

int main(){

    string correo;

    cout << "\nIntroduce un correo valido: ";
    getline(cin, correo);

    if(esEmailValido(correo)){

        cout << "\nEl correo " << correo << " es valido. " << endl;

    }else{

        cout << "\nEl correo " << correo <<  " no es valido. " << endl;

    }

    return 0;
    
}